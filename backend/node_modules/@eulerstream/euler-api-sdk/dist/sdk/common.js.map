{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/sdk/common.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * The Sign Serverâ„¢\n * Sign Server API Documentation\n *\n * The version of the OpenAPI document: dev\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from \"./configuration\";\nimport type { RequestArgs } from \"./base\";\nimport type { AxiosInstance, AxiosResponse } from 'axios';\nimport { RequiredError } from \"./base\";\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\nfunction setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = \"\"): void {\n    if (parameter == null) return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        } \n        else {\n            Object.keys(parameter).forEach(currentKey => \n                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)\n            );\n        }\n    } \n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        } \n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (axios.defaults.baseURL ? '' : configuration?.basePath ?? basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n"]}
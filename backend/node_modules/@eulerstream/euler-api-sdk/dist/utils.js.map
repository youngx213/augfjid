{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;AAOA,SAAgB,WAAW,CAAC,UAAwC;IAElE,MAAM,MAAM,GAAwB;QAClC,GAAG;YACD,QAAQ,EAAE,gCAAgC;YAC1C,WAAW,EAAE,EAAC,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,EAAuB;YAC/D,UAAU,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC;SAC9E;QACD,GAAG,UAAU;KACd,CAAA;IAED,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QAClB,OAAO,MAAM,CAAC;KACf;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,OAAO,MAAM,CAAC,MAAM,CAAC;IAErB,MAAM,CAAC,WAAW,CAAC,OAAO,KAAK,EAAE,CAAC;IAClC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;IAEjD,OAAO,MAAM,CAAC;AAEhB,CAAC;AAvBD,kCAuBC","sourcesContent":["import {Configuration} from \"@/sdk\";\nimport {AxiosRequestConfig} from \"axios\";\n\nexport type ClientConfiguration = Configuration & {\n  apiKey?: string\n}\n\nexport function buildConfig(baseConfig: Partial<ClientConfiguration>): ClientConfiguration {\n\n  const config: ClientConfiguration = {\n    ...{\n      basePath: 'https://tiktok.eulerstream.com', // Or your choice of alternate signature provider\n      baseOptions: {validateStatus: () => true} as AxiosRequestConfig,\n      isJsonMime: (mime: string) => mime.toLowerCase().includes(\"application/json\")\n    },\n    ...baseConfig\n  }\n\n  if (!config.apiKey) {\n    return config;\n  }\n\n  const apiKey = config.apiKey;\n  delete config.apiKey;\n\n  config.baseOptions.headers ||= {};\n  config.baseOptions.headers['X-Api-Key'] = apiKey;\n\n  return config;\n\n}"]}